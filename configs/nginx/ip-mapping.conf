# YoungsCoolPlay UI IP 与 vless 账号 1:1 映射配置
# 实现基于客户端 IP 地址的智能账号分配和流量管理

# IP 地址到 vless 账号的精确映射
map $remote_addr $vless_account_id {
    default "default";
    
    # VIP 用户专用 IP 映射
    "203.0.113.10"    "vip_001";
    "203.0.113.11"    "vip_002";
    "203.0.113.12"    "vip_003";
    "203.0.113.13"    "vip_004";
    "203.0.113.14"    "vip_005";
    
    # 企业用户 IP 段映射
    ~^10\.100\.1\.     "enterprise_team_a";
    ~^10\.100\.2\.     "enterprise_team_b";
    ~^10\.100\.3\.     "enterprise_team_c";
    ~^10\.100\.4\.     "enterprise_team_d";
    
    # 办公室网络映射
    ~^192\.168\.10\.   "office_beijing";
    ~^192\.168\.20\.   "office_shanghai";
    ~^192\.168\.30\.   "office_guangzhou";
    ~^192\.168\.40\.   "office_shenzhen";
    
    # 家庭用户网络映射
    ~^192\.168\.1\.    "home_user_group_1";
    ~^192\.168\.2\.    "home_user_group_2";
    ~^192\.168\.3\.    "home_user_group_3";
    
    # 学校/教育机构映射
    ~^172\.16\.1\.     "edu_university_a";
    ~^172\.16\.2\.     "edu_university_b";
    ~^172\.16\.3\.     "edu_high_school";
    
    # 移动网络运营商 IP 段
    ~^117\.136\.       "mobile_china_unicom";
    ~^223\.5\.         "mobile_china_telecom";
    ~^120\.196\.       "mobile_china_mobile";
    
    # 国际用户 IP 映射
    ~^8\.8\.           "international_google";
    ~^1\.1\.           "international_cloudflare";
    ~^208\.67\.        "international_opendns";
}

# 根据账号 ID 映射到具体的 vless 配置
map $vless_account_id $vless_uuid {
    default "550e8400-e29b-41d4-a716-446655440000";
    
    # VIP 用户 UUID
    "vip_001" "550e8400-e29b-41d4-a716-446655440001";
    "vip_002" "550e8400-e29b-41d4-a716-446655440002";
    "vip_003" "550e8400-e29b-41d4-a716-446655440003";
    "vip_004" "550e8400-e29b-41d4-a716-446655440004";
    "vip_005" "550e8400-e29b-41d4-a716-446655440005";
    
    # 企业用户 UUID
    "enterprise_team_a" "660e8400-e29b-41d4-a716-446655440001";
    "enterprise_team_b" "660e8400-e29b-41d4-a716-446655440002";
    "enterprise_team_c" "660e8400-e29b-41d4-a716-446655440003";
    "enterprise_team_d" "660e8400-e29b-41d4-a716-446655440004";
    
    # 办公室网络 UUID
    "office_beijing"    "770e8400-e29b-41d4-a716-446655440001";
    "office_shanghai"   "770e8400-e29b-41d4-a716-446655440002";
    "office_guangzhou"  "770e8400-e29b-41d4-a716-446655440003";
    "office_shenzhen"   "770e8400-e29b-41d4-a716-446655440004";
    
    # 家庭用户 UUID
    "home_user_group_1" "880e8400-e29b-41d4-a716-446655440001";
    "home_user_group_2" "880e8400-e29b-41d4-a716-446655440002";
    "home_user_group_3" "880e8400-e29b-41d4-a716-446655440003";
    
    # 教育机构 UUID
    "edu_university_a"  "990e8400-e29b-41d4-a716-446655440001";
    "edu_university_b"  "990e8400-e29b-41d4-a716-446655440002";
    "edu_high_school"   "990e8400-e29b-41d4-a716-446655440003";
    
    # 移动网络 UUID
    "mobile_china_unicom"   "aa0e8400-e29b-41d4-a716-446655440001";
    "mobile_china_telecom"  "aa0e8400-e29b-41d4-a716-446655440002";
    "mobile_china_mobile"   "aa0e8400-e29b-41d4-a716-446655440003";
    
    # 国际用户 UUID
    "international_google"      "bb0e8400-e29b-41d4-a716-446655440001";
    "international_cloudflare"  "bb0e8400-e29b-41d4-a716-446655440002";
    "international_opendns"     "bb0e8400-e29b-41d4-a716-446655440003";
}

# 账号类型映射（用于不同的服务质量）
map $vless_account_id $account_type {
    default "standard";
    
    # VIP 账号
    ~^vip_ "premium";
    
    # 企业账号
    ~^enterprise_ "business";
    
    # 办公室账号
    ~^office_ "office";
    
    # 家庭账号
    ~^home_ "home";
    
    # 教育账号
    ~^edu_ "education";
    
    # 移动网络账号
    ~^mobile_ "mobile";
    
    # 国际账号
    ~^international_ "international";
}

# 根据账号类型设置带宽限制
map $account_type $bandwidth_limit {
    default "10m";
    "premium" "100m";
    "business" "50m";
    "office" "30m";
    "home" "20m";
    "education" "15m";
    "mobile" "5m";
    "international" "25m";
}

# 根据账号类型设置连接数限制
map $account_type $connection_limit {
    default "10";
    "premium" "100";
    "business" "50";
    "office" "30";
    "home" "20";
    "education" "15";
    "mobile" "5";
    "international" "25";
}

# 根据账号类型设置请求频率限制
map $account_type $request_rate {
    default "10r/s";
    "premium" "100r/s";
    "business" "50r/s";
    "office" "30r/s";
    "home" "20r/s";
    "education" "15r/s";
    "mobile" "5r/s";
    "international" "25r/s";
}

# 服务器选择映射（根据账号类型选择不同的服务器）
map $account_type $target_server {
    default "youngscoolplay_standard";
    "premium" "youngscoolplay_premium";
    "business" "youngscoolplay_business";
    "office" "youngscoolplay_office";
    "home" "youngscoolplay_home";
    "education" "youngscoolplay_edu";
    "mobile" "youngscoolplay_mobile";
    "international" "youngscoolplay_intl";
}

# 定义不同类型的上游服务器组
upstream youngscoolplay_premium {
    least_conn;
    server 127.0.0.1:2053 max_fails=2 fail_timeout=10s weight=5;
    server 127.0.0.1:2054 max_fails=2 fail_timeout=10s weight=3;
    keepalive 64;
}

upstream youngscoolplay_business {
    least_conn;
    server 127.0.0.1:2055 max_fails=3 fail_timeout=20s weight=3;
    server 127.0.0.1:2056 max_fails=3 fail_timeout=20s weight=2;
    keepalive 32;
}

upstream youngscoolplay_office {
    least_conn;
    server 127.0.0.1:2057 max_fails=3 fail_timeout=30s weight=2;
    server 127.0.0.1:2058 max_fails=3 fail_timeout=30s weight=1;
    keepalive 16;
}

upstream youngscoolplay_home {
    least_conn;
    server 127.0.0.1:2059 max_fails=5 fail_timeout=60s;
    keepalive 8;
}

upstream youngscoolplay_edu {
    least_conn;
    server 127.0.0.1:2060 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream youngscoolplay_mobile {
    least_conn;
    server 127.0.0.1:2061 max_fails=5 fail_timeout=60s;
    keepalive 4;
}

upstream youngscoolplay_intl {
    least_conn;
    server 127.0.0.1:2062 max_fails=3 fail_timeout=30s weight=2;
    server 127.0.0.1:2063 max_fails=3 fail_timeout=30s weight=1;
    keepalive 16;
}

upstream youngscoolplay_standard {
    least_conn;
    server 127.0.0.1:2064 max_fails=3 fail_timeout=30s;
    keepalive 8;
}

# 创建基于账号类型的限制区域
limit_conn_zone $vless_account_id zone=conn_per_account:10m;
limit_req_zone $vless_account_id zone=req_per_account:10m rate=$request_rate;

# 带宽限制配置（需要 nginx-module-vts 模块）
limit_rate_after 1m;
limit_rate $bandwidth_limit;

# 主服务器配置，集成 IP 映射功能
server {
    listen 80;
    server_name _;
    
    # 自定义日志格式，包含映射信息
    log_format ip_mapping '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" '
                         'account_id="$vless_account_id" '
                         'uuid="$vless_uuid" '
                         'type="$account_type" '
                         'server="$target_server" '
                         'bandwidth="$bandwidth_limit" '
                         'rt=$request_time';
    
    access_log /var/log/nginx/ip-mapping.log ip_mapping;
    error_log /var/log/nginx/ip-mapping-error.log;
    
    # 应用连接和请求限制
    limit_conn conn_per_account $connection_limit;
    limit_req zone=req_per_account burst=20 nodelay;
    
    # 添加自定义头信息
    add_header X-Account-ID $vless_account_id always;
    add_header X-Account-Type $account_type always;
    add_header X-Vless-UUID $vless_uuid always;
    add_header X-Target-Server $target_server always;
    add_header X-Bandwidth-Limit $bandwidth_limit always;
    
    # 主代理位置
    location / {
        # 根据映射选择目标服务器
        proxy_pass http://$target_server;
        
        # 传递映射信息到后端
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Account-ID $vless_account_id;
        proxy_set_header X-Account-Type $account_type;
        proxy_set_header X-Vless-UUID $vless_uuid;
        
        # 超时设置（根据账号类型调整）
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓存控制
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
    }
    
    # vless 配置生成端点
    location /vless/config {
        # 仅允许认证用户访问
        auth_request /auth;
        
        # 返回基于 IP 映射的 vless 配置
        content_by_lua_block {
            local account_id = ngx.var.vless_account_id
            local uuid = ngx.var.vless_uuid
            local account_type = ngx.var.account_type
            
            -- 生成 vless 配置
            local config = {
                protocol = "vless",
                uuid = uuid,
                account_id = account_id,
                account_type = account_type,
                server = ngx.var.server_name,
                port = 443,
                encryption = "none",
                flow = "xtls-rprx-vision",
                network = "tcp",
                security = "tls",
                sni = ngx.var.server_name,
                alpn = "h2,http/1.1"
            }
            
            ngx.header.content_type = "application/json"
            ngx.say(require("cjson").encode(config))
        }
    }
    
    # 账号信息查询端点
    location /account/info {
        auth_request /auth;
        
        content_by_lua_block {
            local info = {
                ip = ngx.var.remote_addr,
                account_id = ngx.var.vless_account_id,
                uuid = ngx.var.vless_uuid,
                account_type = ngx.var.account_type,
                bandwidth_limit = ngx.var.bandwidth_limit,
                connection_limit = ngx.var.connection_limit,
                request_rate = ngx.var.request_rate,
                target_server = ngx.var.target_server,
                timestamp = ngx.time()
            }
            
            ngx.header.content_type = "application/json"
            ngx.say(require("cjson").encode(info))
        }
    }
    
    # 流量统计端点
    location /stats/traffic {
        auth_request /auth;
        
        content_by_lua_block {
            -- 这里可以集成流量统计逻辑
            local stats = {
                account_id = ngx.var.vless_account_id,
                bytes_sent = 0,  -- 从数据库或缓存获取
                bytes_received = 0,
                connections = 0,
                last_activity = ngx.time()
            }
            
            ngx.header.content_type = "application/json"
            ngx.say(require("cjson").encode(stats))
        }
    }
    
    # 认证端点
    location = /auth {
        internal;
        proxy_pass http://youngscoolplay_backend/api/auth/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Account-ID $vless_account_id;
    }
    
    # 管理接口（仅内网访问）
    location /admin/ip-mapping {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        content_by_lua_block {
            -- IP 映射管理界面
            local mappings = {
                ip = ngx.var.remote_addr,
                account_id = ngx.var.vless_account_id,
                uuid = ngx.var.vless_uuid,
                account_type = ngx.var.account_type,
                target_server = ngx.var.target_server,
                limits = {
                    bandwidth = ngx.var.bandwidth_limit,
                    connections = ngx.var.connection_limit,
                    requests = ngx.var.request_rate
                }
            }
            
            ngx.header.content_type = "application/json"
            ngx.say(require("cjson").encode(mappings))
        }
    }
    
    # 健康检查（包含映射信息）
    location /health/mapping {
        access_log off;
        
        content_by_lua_block {
            local health = {
                status = "healthy",
                ip = ngx.var.remote_addr,
                account_id = ngx.var.vless_account_id,
                account_type = ngx.var.account_type,
                target_server = ngx.var.target_server,
                timestamp = ngx.time()
            }
            
            ngx.header.content_type = "application/json"
            ngx.say(require("cjson").encode(health))
        }
    }
}

# SSL 配置服务器（支持 IP 映射）
server {
    listen 443 ssl http2;
    server_name _;
    
    # SSL 配置
    ssl_certificate /etc/ssl/certs/youngscoolplay-ui.crt;
    ssl_certificate_key /etc/ssl/private/youngscoolplay-ui.key;
    
    # 复用 HTTP 配置
    include /etc/nginx/conf.d/ip-mapping-common.conf;
}

# 统计和监控服务器
server {
    listen 8081;
    server_name localhost;
    
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
    
    # 实时统计
    location /stats/realtime {
        content_by_lua_block {
            -- 实时统计逻辑
            ngx.header.content_type = "application/json"
            ngx.say('{"active_connections": 0, "total_requests": 0}')
        }
    }
    
    # 映射统计
    location /stats/mappings {
        content_by_lua_block {
            -- 映射统计逻辑
            ngx.header.content_type = "application/json"
            ngx.say('{"total_mappings": 0, "active_accounts": 0}')
        }
    }
}
# YoungsCoolPlay UI Nginx 负载均衡配置
# 支持多实例部署、健康检查、IP映射等功能

# 定义上游服务器组
upstream youngscoolplay_backend {
    # 负载均衡算法：least_conn（最少连接）
    least_conn;
    
    # 主服务器实例
    server 127.0.0.1:2053 max_fails=3 fail_timeout=30s weight=3;
    server 127.0.0.1:2054 max_fails=3 fail_timeout=30s weight=2 backup;
    server 127.0.0.1:2055 max_fails=3 fail_timeout=30s weight=1 backup;
    
    # 健康检查配置
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Sub 服务上游组
upstream youngscoolplay_sub {
    least_conn;
    server 127.0.0.1:2096 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:2097 max_fails=3 fail_timeout=30s backup;
    keepalive 16;
}

# 限制连接和请求速率
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;
limit_req_zone $server_name zone=req_limit_per_server:10m rate=100r/s;

# IP 地理位置映射（用于 vless 账号分配）
geo $client_country {
    default        US;
    127.0.0.0/8    LOCAL;
    10.0.0.0/8     LOCAL;
    172.16.0.0/12  LOCAL;
    192.168.0.0/16 LOCAL;
    
    # 中国大陆
    1.0.0.0/8      CN;
    14.0.0.0/8     CN;
    27.0.0.0/8     CN;
    36.0.0.0/8     CN;
    39.0.0.0/8     CN;
    42.0.0.0/8     CN;
    49.0.0.0/8     CN;
    58.0.0.0/8     CN;
    59.0.0.0/8     CN;
    60.0.0.0/8     CN;
    61.0.0.0/8     CN;
    
    # 美国
    3.0.0.0/8      US;
    4.0.0.0/8      US;
    6.0.0.0/8      US;
    7.0.0.0/8      US;
    8.0.0.0/8      US;
    9.0.0.0/8      US;
    
    # 日本
    126.0.0.0/8    JP;
    133.0.0.0/8    JP;
    
    # 韩国
    1.208.0.0/12   KR;
    14.0.0.0/8     KR;
    
    # 新加坡
    8.128.0.0/9    SG;
    103.0.0.0/8    SG;
}

# 根据 IP 映射 vless 账号
map $remote_addr $vless_account {
    default "account_default";
    
    # IP 段到账号的映射
    ~^192\.168\.1\.     "account_lan_1";
    ~^192\.168\.2\.     "account_lan_2";
    ~^10\.0\.1\.        "account_office_1";
    ~^10\.0\.2\.        "account_office_2";
    
    # 特定 IP 映射
    "203.0.113.1"       "account_vip_1";
    "203.0.113.2"       "account_vip_2";
    "203.0.113.3"       "account_vip_3";
}

# 根据地理位置选择服务器
map $client_country $backend_server {
    default "youngscoolplay_backend";
    CN      "youngscoolplay_backend";
    US      "youngscoolplay_backend";
    JP      "youngscoolplay_backend";
    KR      "youngscoolplay_backend";
    SG      "youngscoolplay_backend";
}

# 日志格式定义
log_format main_format '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time" '
                       'country=$client_country vless=$vless_account';

log_format access_format '$remote_addr - [$time_local] "$request" $status '
                        '$body_bytes_sent rt=$request_time '
                        'country=$client_country vless=$vless_account';

# HTTP 服务器配置
server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Real-IP $remote_addr always;
    add_header X-Country $client_country always;
    add_header X-Vless-Account $vless_account always;
    
    # 日志配置
    access_log /var/log/nginx/youngscoolplay-ui.access.log main_format;
    error_log /var/log/nginx/youngscoolplay-ui.error.log warn;
    
    # 客户端配置
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # 连接和请求限制
    limit_conn conn_limit_per_ip 20;
    limit_req zone=req_limit_per_ip burst=50 nodelay;
    limit_req zone=req_limit_per_server burst=200 nodelay;
    
    # 主应用代理
    location / {
        # 根据地理位置选择后端
        proxy_pass http://$backend_server;
        
        # 代理头设置
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Country $client_country;
        proxy_set_header X-Vless-Account $vless_account;
        
        # 缓存控制
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 错误处理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 30s;
    }
    
    # Sub 服务代理
    location /sub/ {
        proxy_pass http://youngscoolplay_sub/;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Country $client_country;
        proxy_set_header X-Vless-Account $vless_account;
        
        proxy_connect_timeout 15s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # API 接口代理（特殊处理）
    location /api/ {
        # API 请求使用更严格的限制
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        
        proxy_pass http://youngscoolplay_backend;
        
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Country $client_country;
        proxy_set_header X-Vless-Account $vless_account;
        
        # API 超时设置
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 禁用缓存
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # WebSocket 代理
    location /ws {
        proxy_pass http://youngscoolplay_backend;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 特殊设置
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 10s;
    }
    
    # 健康检查端点
    location /health {
        access_log off;
        
        # 内部健康检查
        if ($request_method = GET) {
            return 200 "healthy\n";
        }
        
        # 代理到后端健康检查
        proxy_pass http://youngscoolplay_backend/health;
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        proxy_send_timeout 5s;
        
        add_header Content-Type text/plain;
        add_header X-Health-Check "nginx-proxy";
    }
    
    # 负载均衡状态页面
    location /nginx_status {
        # 仅允许本地访问
        allow 127.0.0.1;
        allow ::1;
        deny all;
        
        stub_status on;
        access_log off;
    }
    
    # 静态文件处理
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map)$ {
        # 尝试本地文件，否则代理到后端
        try_files $uri @backend;
        
        # 缓存设置
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # 压缩
        gzip_static on;
    }
    
    # 静态文件后备代理
    location @backend {
        proxy_pass http://youngscoolplay_backend;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 静态文件缓存
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 1m;
    }
    
    # 安全配置
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 防止访问敏感文件
    location ~* \.(conf|log|sql|bak|backup|old)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}

# HTTPS 服务器配置（SSL 终止）
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;
    
    # SSL 证书配置
    ssl_certificate /etc/ssl/certs/youngscoolplay-ui.crt;
    ssl_certificate_key /etc/ssl/private/youngscoolplay-ui.key;
    
    # SSL 安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 其他安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 日志配置
    access_log /var/log/nginx/youngscoolplay-ui-ssl.access.log main_format;
    error_log /var/log/nginx/youngscoolplay-ui-ssl.error.log warn;
    
    # 复用 HTTP 配置
    include /etc/nginx/conf.d/youngscoolplay-ui-common.conf;
}

# HTTP 到 HTTPS 重定向（可选）
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;
    
    # 重定向到 HTTPS
    return 301 https://$server_name$request_uri;
}

# 管理接口（仅内网访问）
server {
    listen 8080;
    server_name localhost;
    
    # 仅允许内网访问
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
    
    # 上游状态页面
    location /upstream_status {
        upstream_status;
        access_log off;
    }
    
    # 详细状态信息
    location /status {
        stub_status on;
        access_log off;
    }
    
    # 配置重载
    location /reload {
        content_by_lua_block {
            os.execute("nginx -s reload")
            ngx.say("Configuration reloaded")
        }
    }
}